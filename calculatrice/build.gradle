/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}
version = '0.1.0'


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
javafx {
    version = "12"
    modules = [ 'javafx.controls' ]
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'
    
        implementation 'ch.qos.logback:logback-core:1.2.4'
        implementation 'ch.qos.logback:logback-classic:1.2.4'
        //nb : Logback implemente nativement l'API SLF4J.

          implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
        implementation  'ch.qos.logback.contrib:logback-jackson:0.1.5'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
}


application {
    // Define the main class for the application.
    mainClass = 'Calculatrice.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': 'Calculatrice',
                   'Implementation-Version':' 0.1.0',
                   'Main-class' : 'Vue.LauncherMVC',
                   'Multi-Release': 'true'
                   )
    }
      
   // from { ["connectionToTwitter.json","configBooksF.properties"]}
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  duplicatesStrategy = 'include'
    
}



java {
    withSourcesJar()
}


test {
    testLogging {
      events "passed", "skipped", "failed" , "standardOut", "standardError"

      showExceptions true
      exceptionFormat "full"
      showCauses true
      showStackTraces true

      showStandardStreams = false
    }
  }
